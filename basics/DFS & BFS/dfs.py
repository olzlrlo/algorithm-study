# DFS, 깊이 우선 탐색
# 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘
# Stack 자료구조 활용

# 1. 탐색 시작 노드를 스택에 삽입 후, 방문 처리
# 2. 스택의 최상단 노드에 방문하지 않은 인접 노드가 있다면,
    # 그 인접 노드를 스택 노드에 넣고 방문 처리
    # 그렇지 않으면, 스택에서 최상단 노드를 꺼냄
# 3. 2번 과정을 더 이상 수행할 수 없을 때까지 반복

def dfs(graph, v, visited):
    visited[v] = True # 현재 노드 방문 처리
    print(v, end = ' ')

    for i in graph[v]: # 인접 노드 중
        if not visited[i]: # 방문하지 않은 인접 노드가 있다면
            dfs(graph, i, visited)

graph = [[], [2, 3, 8], [1, 7], [1, 4, 5], [3, 5], [3, 4], [7], [2, 6, 8], [1, 7]]
visited = [False] * 9

dfs(graph, 1, visited) # 그래프, 현재 노드, 방문 상태
